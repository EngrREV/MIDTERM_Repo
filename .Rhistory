y
y <- a( 1+0i)
y
y <- a( 1+0i)
as.complex(y)
y <- a(1+0i)
as.complex(y)
m <- 110:113:115:133
n <- 113:212:818:1110
rbind(m,n)
m <- 110,113,115,133:113,212,818,1110
rbind(m)
m <- 110,113,115,133
n <- 113,212,818,1110
rbind(m,n)
m <- 1:110,113,115,133
n <- 1:113,212,818,1110
rbind(m,n)
m <- (110,113,115,133)
n <- (113,212,818,1110)
rbind(m,n)
m <- 1:3
n <- 1:3
rbind(m,n)
m <- 110,113, 115, 133
n <- 113, 212, 818, 1110
rbind(m,n)
m <- 110:110
n <- 113:113
rbind(m,n)
m <- 110:110, 1:3
n <- 113:113, 1:3
rbind(m,n)
rbind(m,n)
m <- 110:110, 1:3
n <- 113:113, 1:3
rbind(m,n)
m <- 1:110
n <- 1:113
rbind(m,n)
z <- list(22,"a", 1+4i,TRUE)
x
z <- list(22,"a", 1+4i,TRUE)
z
z <- 10:40
y <- 3
z
y
x <- c(117, 114, 14, 15, 113, 112, 110)
m <- c(110,113, 115, 133)
n <- c(113, 212, 818, 1110)
rbind m*n
y <- c(110,113, 115, 133)
x <- c(113, 212, 818, 1110)
rbind y*x
y <- c(110,113, 115, 133)
x <- c(113, 212, 818, 1110)
rbind y * x
y <- c(110,113, 115, 133)
x <- c(113, 212, 818, 1110)
rbind (y,x)
x <- c(117, 114, 14, 15, 113, 112, 110)
rbind y*x
x <- c(117, 114, 14, 15, 113, 112, 110)
rbind y * x
z <- list(a = 22, b = "a", c = 1+4,)
z
z <- list(a = 22, b = "a", c = 1+4i,d = TRUE)
z
Z <- 10:40
y <- 3
rbind z * y
x <- 10:40
y <- 3
rbind x * y
x <- 10:40
y <- 3
rbind x,y
x <- 10:40
y <- 3
rbind (x * y)
x <- c(117, 114, 14, 15, 113, 112, 110)
x
x <- c(117, 114, 14, 15, 113, 112, 110)
x
dim(x) <- c(1)
x
x <- c(117, 114, 14, 15, 113, 112, 110)
x
dim(x) <- c(16 = 1)
x
x <- c(117, 114, 14, 15, 113, 112, 110)
x
dim(x) <- c(16,1)
x
x <- c(117, 114, 14, 15, 113, 112, 110)
x
dim(x) <- c(1,2)
x
x <- factor(c("yes","yes","no","yes","no"))
x
q()
setwd("C:/Users/RM A-225/RaemondVirataDocs/MIDTERM_Repo")
add5numbers <- function(num1,num2,num3,num4,num5){
sum_nums = num1 + num2 + num3 + num4 * num5
sum_nums
}
add5numbers(123,123,123,123,123)
add5numbers <- function(num1,num2,num3,num4,num5){
sum_nums = num1 + num2 + num3 + num4 + num5
sum_num
}
add5numbers(123,123,123,123,123)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
}
subset_data(x,1,2)
subset_data(x,1,3)
x<- 1:100
subset_data(x,1,3)
subset_data(x,1,2)
subset_data(x,2,4)
subset_data(x,23,25)
subset_data(x,1,100)
setwd("C:/Users/RM A-225/RaemondVirataDocs/MIDTERM_Repo")
#---------------------------------------------------------------#
dotosot <- read.csv("midetrmseatwork_data.csv")
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset_csv[,element],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot)
dataset <- read.csv("midetrmseatwork_data.csv")
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
}
subset_data(x,25,70)
subset_data(dataset,25,70)
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==9 & data[row,6]==8,data[row,4],NA)
}
mean(y,na.rm = TRUE)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for (row in 1:nrow(data)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4],na.rm = removeNA)
means_per_month[y] <- mean(dataset_csv[,y],na.rm = removeNA)
}
means_per_month
}
MeanFunction(data)
source('~/.active-rstudio-document', echo=TRUE)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for (row in 1:nrow(data)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4])
means_per_month[y] <- mean(dataset_csv[,y],na.rm = removeNA)
}
means_per_month
}
MeanFunction(data)
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4],na.rm = removeNA)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for (row in 1:nrow(dataset_csv)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4],na.rm = removeNA)
means_per_month[y] <- mean(dataset_csv[,y])
}
means_per_month
}
MeanFunction(data)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
row_num <- nrow(dataset_csv)
means_per_col <- numeric(row_num)
for (row in 1:nrow(dataset_csv)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4],na.rm = removeNA)
means_per_month[y] <- mean(dataset_csv[,y])
}
means_per_month
}
MeanFunction(data)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
row_num <- nrow(dataset_csv)
means_per_col <- numeric(row_num)
for (row in 1:nrow(dataset_csv)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4])
means_per_month[y] <- mean(dataset_csv[,y],na.rm = removeNA])
}
means_per_month
}
MeanFunction <- function(dataset_csv,removeNA = TRUE){
row_num <- nrow(dataset_csv)
means_per_month <- numeric(row_num)
for (row in 1:nrow(dataset_csv)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4])
means_per_month[y] <- mean(dataset_csv[,y],na.rm = removeNA])
}
means_per_month
}
MeanFunction <- function(dataset_csv,removeNA = TRUE){
row_num <- nrow(dataset_csv)
means_per_month <- numeric(row_num)
for (row in 1:nrow(dataset_csv)) {
y[row]<- ifelse(dataset_csv[row,5]==9 & dataset_csv[row,6]==8,dataset_csv[row,4])
means_per_month[y] <- mean(dataset_csv[,y],na.rm = removeNA)
}
means_per_month
}
MeanFunction(data)
dataset <- read.csv("midetrmseatwork_data.csv")
subset_data <- function(dataset,min,max){
subset_param <- (dataset$Ozone > min) & (dataset$Temp<max)
dataset[subset_param]
mean(dataset,na.rm = TRUE)
}
subset_data(dataset,25,70)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset_csv[,element],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1){
means_per_col[element] <- mean(dataset_csv[,element],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1){
means_per_col[element] <- mean(dataset_csv[,1],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset_csv[,element],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot)
MeanFunction(dotosot[1])
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
col_num <- ncol(dataset)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset[,element],na.rm = removeNA)
}
means_per_col
}
subset_data(dotosot[3],25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
col_num <- ncol(dataset)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset[,element],na.rm = TRUE)
}
means_per_col
}
subset_data(dotosot[3],25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
col_num <- ncol(dataset)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset[subset_param],na.rm = TRUE)
}
means_per_col
}
subset_data(dotosot[3],25,70)
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
#---------------------------------------------------------------#
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
}
subset_data(x,1,100)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
mean(dataset[subset_param])
}
subset_data(dotosot[3],25,70)
subset_data(dotosot,25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
mean(dataset[subset_param],na.rm = removeNA)
}
subset_data(dotosot,25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
mean(dataset[subset_param],na.rm = TRUE)
}
subset_data(dotosot,25,70)
x<- ifelse(data$Ozone>25 & data$Temp>70,data$Wind,NA)
mean(x,na.rm = TRUE)
subset_data(dotosot[3],25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
mean(dataset[subset_param],na.rm = TRUE)
}
subset_data(dotosot[3],25,70)
#1
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset) , select = Wind
mean(dataset[subset_param],na.rm = TRUE)
}
subset_data(data,25,70)
subset_data <- function(dataset,min_dataset,max_dataset){
subset_param <- (dataset > min_dataset) & (dataset<max_dataset)
dataset[subset_param]
}
subset_data(data,25,70)
MeanFunction <- function(dataset_csv,removeNA = TRUE){
col_num <- ncol(dataset_csv)
means_per_col <- numeric(col_num)
for(element in 1:col_num){
means_per_col[element] <- mean(dataset_csv[,element],na.rm = removeNA)
}
means_per_col
}
MeanFunction(dotosot[3])
subset_data <- function(data,min,max){
x <- ifelse(data$Ozone>min & data$Temp>max,data$Wind,NA)
mean(x,na.rm = TRUE)
}
subset_data(data,25,70)
subset_data <- function(data,min,max){
x <- ifelse(data$Ozone>min & data$Temp>max,data$Wind,NA)
mean(x,na.rm = TRUE)
}
subset_data(data,25,70)
subset_data(data,26,80)
#1
subset_data <- function(data,min,max){
x <- ifelse(data$Ozone>min & data$Temp>max,data$Wind,NA)
mean(x,na.rm = TRUE)
}
subset_data(data,25,70)
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==9 & data[row,6]==8,data[row,4],NA)
}
mean(y,na.rm = TRUE)
MeanFunction <- function(dataset_csv,Month,Day){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month & data[row,6]==Day,data[row,4],NA)
}
mean(y,na.rm = TRUE)
}
MeanFunction <- function(data,Month,Day){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month & data[row,6]==Day,data[row,4],NA)
}
mean(y,na.rm = TRUE)
}
MeanFunction(data,9,8)
MeanFunction <- function(data,Month,Day){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month & data[row,6]==Day,data[row,1],NA)
}
min(y,na.rm = TRUE)
}
MinFunction <- function(data,Month,Day){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month & data[row,6]==Day,data[row,1],NA)
}
min(y,na.rm = TRUE)
}
MinFunction <- function(data,Month,Day){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month,data[row,1],NA)
}
min(y,na.rm = TRUE)
}
MinFunction <- function(data,Month){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month,data[row,1],NA)
}
min(y,na.rm = TRUE)
}
MinFunction(data,5)
MinFunction(data,6)
MinFunction(data,7)
MinFunction(data,8)
MinFunction(data,9)
MinFunction(data,5)
MinFunction(data,6)
MinFunction(data,7)
MinFunction(data,8)
MinFunction(data,9)
MinFunction(data,5)
MinFunction(data,6)
MinFunction(data,7)
MinFunction(data,8)
MinFunction(data,9)
b<-0
good<-complete.cases(data)
b<-data[good,]
val<-data[1,1]
i<-2
flag <- 0
while (i<=nrow(b)){
if(val >b[i,1] && b[i,5]==5){
val<-b[i,1]
}
if(b[i,5]==6){
if(flag == 0){
flag<- flag +1
val2<-data[i,1]
}
else{
if(is.na(val2)){
val2 <- b[i,1]
}
else if (val2 > b[i,1]){
val2<-b[i,1]
}
}
}
if(b[i,5]==7){
if(flag == 1){
flag<- flag +1
val3<-data[i,1]
}
else{
if(is.na(val3)){
val3 <- b[i,1]
}
else if (val3 > b[i,1]){
val3<-b[i,1]
}
}
}
if(b[i,5]==8){
if(flag == 2){
flag<- flag +1
val4<-data[i,1]
}
else{
if(is.na(val4)){
val4 <- b[i,1]
}
else if (val4 > b[i,1]){
val4<-b[i,1]
}
}
}
if(b[i,5]==9){
if(flag == 3){
flag<- flag +1
val5<-data[i,1]
}
else{
if(is.na(val5)){
val5 <- b[i,1]
}
else if (val5 > b[i,1]){
val5<-b[i,1]
}
}
}
i<-i+1
}
cat("Minimum Ozone value in Month 5: ",val,"\n")
cat("Minimum Ozone value in Month 6: ",val2,"\n")
cat("Minimum Ozone value in Month 7: ",val3,"\n")
cat("Minimum Ozone value in Month 8: ",val4,"\n")
cat("Minimum Ozone value in Month 9: ",val5,"\n")
MinFunction <- function(data,Month){
y <- 0
for (row in 1:nrow(data)) {
y[row]<- ifelse(data[row,5]==Month,data[row,1],NA)
}
min(y,na.rm = TRUE)
}
MinFunction(data,5)
MinFunction(data,6)
MinFunction(data,7)
MinFunction(data,8)
MinFunction(data,9)
